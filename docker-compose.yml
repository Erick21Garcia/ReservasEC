services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "4000:4000"
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    environment:
      - MONGO_URI=mongodb://mongo:27017/authdb
      - JWT_SECRET=secreto-super-seguro
    depends_on:
      - mongo

  booking-service:
    build:
      context: ./booking-service
    ports:
      - "5000:5000"
    volumes:
      - ./booking-service:/app
      - /app/node_modules
    environment:
      - MONGO_URI=mongodb://mongo:27017/bookingdb
      - JWT_SECRET=secreto-super-seguro
    depends_on:
      - mongo

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "5002:5002"
    volumes:
      - ./notification-service:/app
      - /app/node_modules
    environment:
      - EMAIL_HOST=sandbox.smtp.mailtrap.io
      - EMAIL_PORT=2525
      - EMAIL_USER=58b4d823829f7f
      - EMAIL_PASS=e77d610fd759b5
    depends_on:
      - mongo

  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - MONGO_URI=mongodb://mongo:27017/user-service-db
      - JWT_SECRET=secreto-super-seguro
    depends_on:
      - mongo

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - booking-service

volumes:
  mongo_data:
